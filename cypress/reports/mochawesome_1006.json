{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2025-05-22T09:17:16.427Z",
    "end": "2025-05-22T09:19:06.531Z",
    "duration": 110104,
    "testsRegistered": 3,
    "passPercent": 33.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "3c5ee715-e0cd-4fad-bd0b-01a77424ef8d",
      "title": "",
      "fullFile": "cypress/e2e/Standalones/FO/userPasswordReset.js",
      "file": "cypress/e2e/Standalones/FO/userPasswordReset.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a9db2dc1-b0d1-4069-88d6-e30116492096",
          "title": "addNewAccount.js: call LBO front-office subscription form, env de test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add a new subscription (client) process on macbook-15",
              "fullTitle": "addNewAccount.js: call LBO front-office subscription form, env de test Add a new subscription (client) process on macbook-15",
              "timedOut": null,
              "duration": 61481,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../videos/userPasswordReset.js.mp4\"",
              "code": "cy.fixture('stores').then(stores => {\n  stores.forEach(store => {\n    cy.visit(store);\n    cy.acceptCookies();\n    cy.visit(`${store}/login?mode=connection`, {\n      failOnStatusCode: false\n    });\n    cy.validateElement('[data-cy=customer-registration]').wait(2000);\n    cy.get('[data-cy=customer-registration]').click({\n      force: true\n    });\n    cy.url().should('contain', 'login?mode=connection');\n    // Customer registration\n    cy.acceptCookies();\n    cy.customInfo();\n    // Confirm subscription\n    cy.validateElement('[data-cy=submit] > .c-btn');\n    cy.get('[data-cy=submit] > .c-btn').click({\n      force: true\n    });\n    cy.wait(3000); /* TO KEEP FOR CI TESTS */\n    cy.validateElement('.c-form-message');\n  });\n});",
              "err": {},
              "uuid": "7ee3a351-5838-4aff-82ff-05e2ea592b58",
              "parentUUID": "a9db2dc1-b0d1-4069-88d6-e30116492096",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7ee3a351-5838-4aff-82ff-05e2ea592b58"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 61481,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "fb351097-bf65-4241-b820-7080c9fb4330",
          "title": "Call the LBO front office and front API to reset the user password",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reset client password directly from user profile",
              "fullTitle": "Call the LBO front office and front API to reset the user password Reset client password directly from user profile",
              "timedOut": null,
              "duration": 48018,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  \"../screenshots/userPasswordReset.js/Call the LBO front office and front API to reset the user password -- Reset client password directly from user profile (failed).png\",\n  \"../videos/userPasswordReset.js.mp4\"\n]",
              "code": "// Get user password reset href attribute and click on it\ncy.validateElement('.c-account-panel__item.c-account-panel__item--mdp');\ncy.get('.c-account-panel__item.c-account-panel__item--mdp').invoke('attr', 'href').then(href => {\n  cy.get('.c-account-panel__item.c-account-panel__item--mdp').click({\n    force: true\n  });\n});\n// Enter the old password and modify it with a new one\nconst oldPassword = customerLoginData.custom_password;\nconst newPassword = oldPassword + '1@Cf';\n// Some assertion validations\ncy.validateElement('.c-account-heading__title').validateElement('#old').validateElement('#new').validateElement('#confirm');\n// Proceed to reset request & update user password fixture entity\ncy.get('#old').clear().type(oldPassword, {\n  delay: 100\n});\ncy.get('#new').clear().type(newPassword, {\n  delay: 100\n});\ncy.get('#confirm').clear().type(newPassword, {\n  delay: 100\n});\ncy.validateElement('.c-account-form__submit > .c-btn').get('.c-account-form__submit > .c-btn').should('be.visible').click({\n  force: true\n}).validateElement('.c-form-message', {\n  timeout: 5000\n});\ncustomerLoginData.custom_password = newPassword;\ncy.writeFile(\"cypress/fixtures/login.json\", customerLoginData);\n// Logout & login again with new password\ncy.validateElement('[data-cy=customer-logout]', {\n  responseTimeout: 5000\n}).get(\"[data-cy=customer-logout] > .c-account-panel__item\").click({\n  force: true\n}).url().should('contain', Cypress.env(\"fo\") + \"/\").customLogin();",
              "err": {
                "message": "CypressError: Timed out retrying after 30050ms: `cy.click()` failed because this element:\n\n`<button id=\"my-account__label\" role=\"button\" aria-haspopup=\"true\" aria-controls=\"my-account__region\" aria-expanded=\"false\" data-cy=\"header-tool--account\" class=\"c-dropdown-menu__button\" data-v-5daa72dd=\"\">...</button>`\n\nis being covered by another element:\n\n`<div id=\"cookiebanner\" lang=\"fr\" dir=\"ltr\" ng-non-bindable=\"\" name=\"cookiebanner\" style=\"display: block;\" class=\"show cookieloaded\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Call the LBO front office a...`",
                "estack": "CypressError: Timed out retrying after 30050ms: `cy.click()` failed because this element:\n\n`<button id=\"my-account__label\" role=\"button\" aria-haspopup=\"true\" aria-controls=\"my-account__region\" aria-expanded=\"false\" data-cy=\"header-tool--account\" class=\"c-dropdown-menu__button\" data-v-5daa72dd=\"\">...</button>`\n\nis being covered by another element:\n\n`<div id=\"cookiebanner\" lang=\"fr\" dir=\"ltr\" ng-non-bindable=\"\" name=\"cookiebanner\" style=\"display: block;\" class=\"show cookieloaded\">...</div>`\n\nFix this problem, or use {force: true} to disable error checking.\n\nhttps://on.cypress.io/element-cannot-be-interacted-with\n\nBecause this error occurred during a `before all` hook we are skipping the remaining tests in the current suite: `Call the LBO front office a...`\n    at ensureIsDescendent (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:113057:68)\n    at ensureDescendents (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:113108:5)\n    at ensureDescendentsAndScroll (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:113114:14)\n    at ensureElIsNotCovered (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:113245:5)\n    at runAllChecks (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:113444:52)\n    at retryActionability (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:113481:16)\n    at tryCatcher (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:4285:29)\n    at whenStable (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:145846:68)\n    at <unknown> (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:145787:14)\n    at tryCatcher (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise._settlePromiseFromHandler (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:1489:31)\n    at Promise._settlePromise (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:1546:18)\n    at Promise._settlePromise0 (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:1591:10)\n    at Promise._settlePromises (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:1671:18)\n    at Promise._fulfill (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:1615:18)\n    at <unknown> (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:5420:46)",
                "diff": null
              },
              "uuid": "66ed6278-c690-4be0-9dcc-5ace47b0b024",
              "parentUUID": "fb351097-bf65-4241-b820-7080c9fb4330",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset user password via front API",
              "fullTitle": "Call the LBO front office and front API to reset the user password Reset user password via front API",
              "timedOut": null,
              "duration": 0,
              "state": "skipped",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Client requests a password reset directly from front API\ncy.validateElement('.c-btn.c-connection__mdp', {\n  timeout: 5000\n});\ncy.get('.c-btn.c-connection__mdp').should('be.visible').click({\n  force: true\n});\ncy.validateElement('.c-modal-pwd').validateElement('.margin-bottom-xl > .c-input > div > #email').validateElement('.c-modal-pwd__form > :nth-child(2) > .c-btn');\ncy.get('.margin-bottom-xl > .c-input > div > #email').click({\n  force: true\n}).clear().type(customerLoginData.custom_email, {\n  force: true,\n  delay: 100\n});\ncy.validateElement('.c-modal-pwd__form > :nth-child(2) > .c-btn');\ncy.get('.c-modal-pwd__form > :nth-child(2) > .c-btn').should('be.visible').click({\n  force: true\n}).get('.c-modal-pwd__title').should('be.visible');",
              "err": {},
              "uuid": "bc104e74-a347-4c6d-91b5-cf597374f562",
              "parentUUID": "fb351097-bf65-4241-b820-7080c9fb4330",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "66ed6278-c690-4be0-9dcc-5ace47b0b024"
          ],
          "pending": [],
          "skipped": [
            "bc104e74-a347-4c6d-91b5-cf597374f562"
          ],
          "duration": 48018,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true,
        "charts": true,
        "reportPageTitle": "Cypress Nuxt Front : Report",
        "inlineAssets": true
      },
      "version": "6.2.0"
    }
  }
}