{
  "stats": {
    "suites": 2,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-14T16:00:52.110Z",
    "end": "2025-03-14T16:03:05.143Z",
    "duration": 133033,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0b00f1b8-b74f-474d-b876-46354d59fa82",
      "title": "",
      "fullFile": "cypress/e2e/customerLogin.js",
      "file": "cypress/e2e/customerLogin.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "72d5c538-94af-4aaf-8622-1957cb0e4e17",
          "title": "addNewAccount.js: call LBO front-office subscription form, env de test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add a new subscription (client) process on macbook-15 (Qase ID: 5)",
              "fullTitle": "addNewAccount.js: call LBO front-office subscription form, env de test Add a new subscription (client) process on macbook-15 (Qase ID: 5)",
              "timedOut": null,
              "duration": 62121,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../videos/customerLogin.js.mp4\"",
              "code": "cy.fixture('stores').then(stores => {\n  stores.forEach(store => {\n    cy.visit(store);\n    cy.acceptCookies();\n    cy.visit(`${store}/login?mode=connection`, {\n      failOnStatusCode: false\n    });\n    cy.validateElement('[data-cy=customer-registration]').wait(2000);\n    cy.get('[data-cy=customer-registration]').click({\n      force: true\n    });\n    cy.url().should('contain', 'login?mode=connection');\n    // Customer registration\n    cy.acceptCookies();\n    cy.customInfo();\n    // Confirm subscription\n    cy.validateElement('[data-cy=submit] > .c-btn');\n    cy.get('[data-cy=submit] > .c-btn').click({\n      force: true\n    });\n    cy.wait(3000); /* TO KEEP FOR CI TESTS */\n    cy.validateElement('.c-form-message');\n  });\n});",
              "err": {},
              "uuid": "2189af1b-f30a-449a-85a6-89bfe2d3869a",
              "parentUUID": "72d5c538-94af-4aaf-8622-1957cb0e4e17",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2189af1b-f30a-449a-85a6-89bfe2d3869a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 62121,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "8eb0c4ab-dea1-4cda-b9d8-cddc4d486785",
          "title": "customerLogin.js : call nuxt front-office",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Warm up the client profile text inputs and activate its account on macbook-15 (Qase ID: 7)",
              "fullTitle": "customerLogin.js : call nuxt front-office Warm up the client profile text inputs and activate its account on macbook-15 (Qase ID: 7)",
              "timedOut": null,
              "duration": 27953,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../videos/customerLogin.js.mp4\"",
              "code": "cy.fixture('stores').then(stores => {\n  stores.forEach(store => {\n    cy.visit(store + '/login?mode=connection', {\n      responseTimeout: 30000,\n      followRedirect: true\n    });\n    cy.acceptCookies();\n    cy.validateElement('[data-cy=customer-registration]').get('[data-cy=customer-registration]').click({\n      force: true\n    }).url().should('contain', 'login?mode=connection');\n    cy.validateElement('[data-cy=submit] > .c-btn').get('[data-cy=submit] > .c-btn').click({\n      force: true\n    }).wait(3000);\n    cy.validateElement('.c-form-message');\n  });\n});",
              "err": {},
              "uuid": "ce5f07c6-c605-4e2e-ab9f-fed17a7b91f3",
              "parentUUID": "8eb0c4ab-dea1-4cda-b9d8-cddc4d486785",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Enter client User/Pass on macbook-15 and login (Qase ID: 7)",
              "fullTitle": "customerLogin.js : call nuxt front-office Enter client User/Pass on macbook-15 and login (Qase ID: 7)",
              "timedOut": null,
              "duration": 25151,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../videos/customerLogin.js.mp4\"",
              "code": "cy.get(\"[data-cy=header-tool--account]\").first().click();\n// Retrieve credentials from login.json\ncy.readFile(\"cypress/fixtures/login.json\").then(credentials => {\n  cy.validateElement('[data-cy=\"customer-email\"]').get('[data-cy=\"customer-email\"]').type(\"dummy\").wait(1000).clear().should(\"be.empty\").type(credentials.custom_email).should(\"have.value\", credentials.custom_email);\n  // Customer password input\n  cy.validateElement('[data-cy=\"customer-password\"]').get('[data-cy=\"customer-password\"]').type(\"dummy\").clear().should(\"be.empty\").type(credentials.custom_password).should(\"have.value\", credentials.custom_password);\n  // Submit and validate login\n  cy.url().should(\"contain\", \"login\");\n  cy.validateElement(\"[data-cy=submit]\").get(\"[data-cy=submit]\").click({\n    force: true\n  });\n  // Use the stored store value for userLastConnectionDateAndStore\n  cy.get('@currentStore').then(store => {\n    cy.userLastConnectionDateAndStore(store);\n  });\n  cy.get(\".c-form-message--error\").should(\"not.exist\");\n  // Login API call validation\n  cy.intercept(\"GET\", \"**/v4/secure/account/addresses\").as(\"securedAddressesApiResponse\");\n  cy.url().should(\"contain\", \"/account/history\");\n});",
              "err": {},
              "uuid": "eb12c091-de75-4c35-bdf2-4b411b7a7ff1",
              "parentUUID": "8eb0c4ab-dea1-4cda-b9d8-cddc4d486785",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Display login error message if user enters bad credentials on macbook-15 (Qase ID: 7)",
              "fullTitle": "customerLogin.js : call nuxt front-office Display login error message if user enters bad credentials on macbook-15 (Qase ID: 7)",
              "timedOut": null,
              "duration": 16989,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../videos/customerLogin.js.mp4\"",
              "code": "cy.get(\"[data-cy=header-tool--account]\").first().click();\n// Invalid login credentials\ncy.validateElement('[data-cy=\"customer-email\"]').get('[data-cy=\"customer-email\"]').type('dummy').clear().wait(1000).type('thisaccountdoesnotexist@neverhood.com');\ncy.validateElement('[data-cy=\"customer-password\"]').get('[data-cy=\"customer-password\"]').type('whattheheck!!');\n// Submit and validate error message\ncy.validateElement('[data-cy=submit]').get('[data-cy=submit]').click({\n  force: true\n});\ncy.get('.c-form-message--error').should('exist');",
              "err": {},
              "uuid": "0ad010b0-5dc7-4b1a-9f83-8e62bd6841a8",
              "parentUUID": "8eb0c4ab-dea1-4cda-b9d8-cddc4d486785",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ce5f07c6-c605-4e2e-ab9f-fed17a7b91f3",
            "eb12c091-de75-4c35-bdf2-4b411b7a7ff1",
            "0ad010b0-5dc7-4b1a-9f83-8e62bd6841a8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 70093,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "overwrite": false,
        "html": false,
        "json": true,
        "reportDir": "cypress/reports/html/.jsons"
      },
      "version": "6.2.0"
    }
  }
}