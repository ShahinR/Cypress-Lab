{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 1,
    "pending": 0,
    "failures": 1,
    "start": "2025-03-04T13:02:03.392Z",
    "end": "2025-03-04T13:04:35.699Z",
    "duration": 152307,
    "testsRegistered": 2,
    "passPercent": 50,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "43ea18a7-d1f4-487d-b6fb-5f1aae621b35",
      "title": "",
      "fullFile": "cypress/e2e/Standalones/FO/checkoutWishlistExistingUser.js",
      "file": "cypress/e2e/Standalones/FO/checkoutWishlistExistingUser.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "605c5dd6-032d-446d-94d8-696c1f234707",
          "title": "addNewAccount.js: call LBO front-office subscription form, env de test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add a new subscription (client) process on macbook-15",
              "fullTitle": "addNewAccount.js: call LBO front-office subscription form, env de test Add a new subscription (client) process on macbook-15",
              "timedOut": null,
              "duration": 51324,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../videos/checkoutWishlistExistingUser.js.mp4\"",
              "code": "cy.fixture('stores').then(stores => {\n  stores.forEach(store => {\n    cy.visit(store);\n    cy.acceptCookies();\n    cy.visit(`${store}/login?mode=connection`, {\n      failOnStatusCode: false\n    });\n    cy.validateElement('[data-cy=customer-registration]').wait(2000);\n    cy.get('[data-cy=customer-registration]').click({\n      force: true\n    });\n    cy.url().should('contain', 'login?mode=connection');\n    // Customer registration\n    cy.acceptCookies();\n    cy.customInfo();\n    // Confirm subscription\n    cy.validateElement('[data-cy=submit] > .c-btn');\n    cy.get('[data-cy=submit] > .c-btn').click({\n      force: true\n    });\n    cy.wait(3000); /* TO KEEP FOR CI TESTS */\n    cy.validateElement('.c-form-message');\n  });\n});",
              "err": {},
              "uuid": "9e564b19-3667-4398-b53c-18d9c11f20f5",
              "parentUUID": "605c5dd6-032d-446d-94d8-696c1f234707",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9e564b19-3667-4398-b53c-18d9c11f20f5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 51324,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "d987b45b-f8d0-42c2-b317-9f0c23e1f036",
          "title": "This test will validate the entire process of adding products to the wishlist",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add random products to the wishlist in both possible ways: directly from the listing && from the product sheet on macbook-15",
              "fullTitle": "This test will validate the entire process of adding products to the wishlist Add random products to the wishlist in both possible ways: directly from the listing && from the product sheet on macbook-15",
              "timedOut": null,
              "duration": 100407,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": "[\n  \"../screenshots/checkoutWishlistExistingUser.js/This test will validate the entire process of adding products to the wishlist -- Add random products to the wishlist in both possible ways directly from the listing && from the product sheet on macbook-15 (failed).png\",\n  \"../videos/checkoutWishlistExistingUser.js.mp4\"\n]",
              "code": "cy.fixture(\"stores\").then(stores => {\n  stores.forEach(store => {\n    cy.visit(store, {\n      failOnStatusCode: false,\n      responseTimeout: 10000,\n      followRedirect: true\n    });\n    cy.acceptCookies();\n    cy.customLogin();\n    cy.listingApiCalls();\n    cy.commonApiInterception();\n    cy.fixture(\"shippingInfo.json\").then(shippingInfo => {\n      cy.addShippingAddress();\n      let retryCount = 0;\n      const maxRetries = 3; // Maximum retries before failing the test\n      const tryAddingProduct = () => {\n        if (retryCount >= maxRetries) {\n          throw new Error(\"All retry attempts failed. No available product.\");\n        }\n        cy.log(`Attempt ${retryCount + 1} to add a product to the basket.`);\n        cy.addProductToBasket();\n        cy.productSizer();\n        cy.get(\"body\").then($body => {\n          if ($body.find(\".c-product-sizer-oos__email-form\").length > 0 && $body.find(\".c-product-sizer-oos__email-input\").is(\":visible\")) {\n            cy.log(\"Product is out of stock. Trying another one...\");\n            retryCount++;\n            tryAddingProduct(); // Recursively retry with a new product\n          }\n        });\n      };\n      tryAddingProduct(); // Initial attempt\n      // Define store & product indexes\n      cy.url().then(url => {\n        const countryConfig = {\n          FRANCE: {\n            storeUrl: shippingInfo.FRANCE.storeUrl,\n            buttonIndex: 0,\n            productIndex: 3\n          },\n          SPAIN: {\n            storeUrl: shippingInfo.SPAIN.storeUrl,\n            buttonIndex: 1,\n            productIndex: 4\n          },\n          ITALY: {\n            storeUrl: shippingInfo.ITALY.storeUrl,\n            buttonIndex: 2,\n            productIndex: 5\n          }\n        };\n        const addProductsToFavorites = (buttonIndex, productIndex) => {\n          cy.wait(3000);\n          cy.get(\".c-btn-favoris.c-btn-favoris--small\", {\n            timeout: 30000\n          }) // Increase timeout\n          .should(\"exist\") // Ensure it exists first\n          .should(\"be.visible\") // Now check visibility\n          .eq(buttonIndex).click({\n            force: true\n          });\n          let validProductIndex = 0;\n          cy.wait(3000);\n          cy.get(\".c-product-thumbnail\", {\n            timeout: 20000\n          }).each($el => {\n            if (!$el.closest(\".c-product-list.nosto_element\").length) {\n              validProductIndex++;\n              if (validProductIndex === productIndex) {\n                cy.wrap($el).click({\n                  force: true\n                });\n                return false;\n              }\n            }\n          });\n          cy.get(\".c-product-sizer__submit > .c-btn-favoris\").should(\"be.visible\").click({\n            force: true\n          });\n          cy.wait(2000);\n        };\n        let countryFound = false;\n        for (const [country, config] of Object.entries(countryConfig)) {\n          if (url.includes(config.storeUrl)) {\n            addProductsToFavorites(config.buttonIndex, config.productIndex);\n            countryFound = true;\n            break;\n          }\n        }\n        if (!countryFound) {\n          throw new Error(\"Invalid country URL.\");\n        }\n      });\n      // Navigate to wishlist page\n      cy.get(\".c-header-tools__item.c-header-tools__item--favorite\").find(\".c-header-tools__button\").should(\"have.attr\", \"href\").then(wishlistHref => {\n        cy.visit(`${store}${wishlistHref}`, {\n          failOnStatusCode: false,\n          responseTimeout: 10000,\n          followRedirect: true\n        });\n      });\n      cy.validateElement(\".c-favorites__list\");\n      cy.validateElement(\".c-favorite-product__remove\");\n      // Add two products to basket from wishlist\n      cy.get(\"body\").then($body => {\n        const dropdownSelectorBase = \".c-favorite-product__action > .u-1\\\\/3 > .c-select > div > #size\";\n        if ($body.find(dropdownSelectorBase).length > 0) {\n          cy.get(\".c-favorite-product\").each((_, index) => {\n            if (index < 2) {\n              const specificDropdownSelector = `:nth-child(${index + 1}) > ${dropdownSelectorBase}`;\n              cy.get(specificDropdownSelector).then($dropdown => {\n                if ($dropdown.length > 0) {\n                  cy.wrap($dropdown).find(\"option\").then($options => {\n                    if ($options.length > 1) {\n                      const firstOption = $options.eq(1).val();\n                      cy.wrap($dropdown).select(firstOption);\n                      cy.wrap($dropdown).should(\"have.value\", firstOption);\n                      const addToBasketButtonSelector = `:nth-child(${index + 1}) .c-btn.c-btn--primary.c-btn--large`;\n                      cy.get(addToBasketButtonSelector).eq(1).click({\n                        force: true\n                      });\n                      cy.wait(2000);\n                      const addToBasketButtonSelector2 = `:nth-child(${index + 2}) .c-btn.c-btn--primary.c-btn--large`;\n                      cy.get(addToBasketButtonSelector2).eq(1).click({\n                        force: true\n                      });\n                      cy.wait(2000);\n                    } else {\n                      cy.log(`Not enough options in dropdown ${index + 1}`);\n                    }\n                  });\n                }\n              });\n            }\n          });\n        }\n      });\n      cy.basketValidation();\n      cy.selectShippingMethod(store);\n      cy.visit(store + \"/checkout/payment\", {\n        failOnStatusCode: false,\n        followRedirect: true\n      });\n      cy.passiveCheckoutCheck(store);\n    });\n  });\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 30000ms: expected '<button.c-btn-favoris.c-btn-favoris--small>' to be 'visible'\n\nThis element `<button.c-btn-favoris.c-btn-favoris--small>` is not visible because it has CSS property: `display: none`",
                "estack": "AssertionError: Timed out retrying after 30000ms: expected '<button.c-btn-favoris.c-btn-favoris--small>' to be 'visible'\n\nThis element `<button.c-btn-favoris.c-btn-favoris--small>` is not visible because it has CSS property: `display: none`\n    at addProductsToFavorites (webpack://cypress-automation/./cypress/e2e/Standalones/FO/checkoutWishlistExistingUser.js:72:17)\n    at Context.eval (webpack://cypress-automation/./cypress/e2e/Standalones/FO/checkoutWishlistExistingUser.js:98:18)\n    at getRet (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:118278:20)\n    at tryCatcher (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:1777:23)\n    at Promise.attempt.Promise.try (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:4285:29)\n    at Context.thenFn (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:118289:66)\n    at Context.then (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:118540:21)\n    at wrapped (https://www.preprod.laboutiqueofficielle.com/__cypress/runner/cypress_runner.js:137823:19)",
                "diff": null
              },
              "uuid": "97d6b634-4fb0-49bc-b8e4-84784536680c",
              "parentUUID": "d987b45b-f8d0-42c2-b317-9f0c23e1f036",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "97d6b634-4fb0-49bc-b8e4-84784536680c"
          ],
          "pending": [],
          "skipped": [],
          "duration": 100407,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true,
        "charts": true,
        "reportPageTitle": "Cypress Nuxt Front : Report",
        "inlineAssets": true
      },
      "version": "6.2.0"
    }
  }
}