{
  "stats": {
    "suites": 2,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-05-22T08:43:15.770Z",
    "end": "2025-05-22T08:47:07.740Z",
    "duration": 231970,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8428f9eb-bd39-4d34-941e-698f5815e076",
      "title": "",
      "fullFile": "cypress/e2e/Standalones/FO/checkoutSepa.js",
      "file": "cypress/e2e/Standalones/FO/checkoutSepa.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "634eb8bf-f576-4d38-963f-159f6dd7855d",
          "title": "addNewAccount.js: call LBO front-office subscription form, env de test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add a new subscription (client) process on macbook-15",
              "fullTitle": "addNewAccount.js: call LBO front-office subscription form, env de test Add a new subscription (client) process on macbook-15",
              "timedOut": null,
              "duration": 72280,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../videos/checkoutSepa.js.mp4\"",
              "code": "cy.fixture('stores').then(stores => {\n  stores.forEach(store => {\n    cy.visit(store);\n    cy.acceptCookies();\n    cy.visit(`${store}/login?mode=connection`, {\n      failOnStatusCode: false\n    });\n    cy.validateElement('[data-cy=customer-registration]').wait(2000);\n    cy.get('[data-cy=customer-registration]').click({\n      force: true\n    });\n    cy.url().should('contain', 'login?mode=connection');\n    // Customer registration\n    cy.acceptCookies();\n    cy.customInfo();\n    // Confirm subscription\n    cy.validateElement('[data-cy=submit] > .c-btn');\n    cy.get('[data-cy=submit] > .c-btn').click({\n      force: true\n    });\n    cy.wait(3000); /* TO KEEP FOR CI TESTS */\n    cy.validateElement('.c-form-message');\n  });\n});",
              "err": {},
              "uuid": "584da246-4c76-4b7d-b406-43ef80c0c03c",
              "parentUUID": "634eb8bf-f576-4d38-963f-159f6dd7855d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "584da246-4c76-4b7d-b406-43ef80c0c03c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 72280,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "afb755b7-1aa2-4cf7-ad5d-a84a9fee3f0c",
          "title": "This test will validate SEPA checkout process",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Go to products listing with a price higher than 150 euros on macbook-15",
              "fullTitle": "This test will validate SEPA checkout process Go to products listing with a price higher than 150 euros on macbook-15",
              "timedOut": null,
              "duration": 159045,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../videos/checkoutSepa.js.mp4\"",
              "code": "cy.fixture('stores').then(stores => {\n  stores.forEach(store => {\n    cy.visit(store, {\n      failOnStatusCode: false\n    }, {\n      responseTimeout: 10000\n    }, {\n      followRedirect: true\n    });\n    cy.acceptCookies();\n    cy.customLogin();\n    cy.listingApiCalls();\n    cy.commonApiInterception();\n    // Continue with the checkout process\n    cy.fixture('shippingInfo.json').then(shippingInfo => {\n      cy.addShippingAddress();\n      cy.basketCreationProcess({\n        store\n      });\n      cy.basketValidation(store);\n      cy.selectShippingMethod(store);\n      // Set the altValue based on the store\n      let altValue = '';\n      if (store.includes(shippingInfo.FRANCE.storeUrl)) {\n        altValue = 'Virement Bancaire';\n      } else if (store.includes(shippingInfo.SPAIN.fullUrl) || store.includes(shippingInfo.ITALY.fullUrl)) {\n        cy.wrap(store).should(storeValue => {\n          expect(storeValue).to.include.oneOf([shippingInfo.SPAIN.fullUrl, shippingInfo.ITALY.fullUrl]);\n        });\n        altValue = 'Transferencia bancaria';\n      } else {\n        throw new Error('Invalid country URL.');\n      }\n      // SEPA payment method\n      cy.get('body').then(payment => {\n        let sepaPayment;\n        cy.validateElement('.c-payment-method-item__wrapper > :nth-child(2) > :nth-child(1) > .c-payment-method-item__button');\n        cy.get('.c-payment-method-item__wrapper > :nth-child(2) > :nth-child(1) > .c-payment-method-item__button').click({\n          force: true\n        }).get(`[alt='${altValue}']`).then(sepaPaymentMethod => {\n          sepaPayment = sepaPaymentMethod;\n          if (payment.find(sepaPayment).length > 0) {\n            sepaPayment.trigger(\"click\");\n          } else {\n            throw new Error('SEPA payment method is either not activated for this test OR something went wrong');\n          }\n        });\n      });\n    });\n    // Validate this payment method and pay\n    cy.validateElement('[data-cy=\"submit-basket\"]');\n    cy.get('[data-cy=\"submit-basket\"]').click({\n      force: true\n    });\n    // Successful payment validation\n    cy.validateElement('.c-confirm__header', {\n      timeout: 20000\n    }).validateElement('.c-confirm__title').validateElement('.c-confirm__subtitle');\n  });\n});",
              "err": {},
              "uuid": "d6e8bfef-ff5a-483c-900f-8e0578cc3dc8",
              "parentUUID": "afb755b7-1aa2-4cf7-ad5d-a84a9fee3f0c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d6e8bfef-ff5a-483c-900f-8e0578cc3dc8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 159045,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true,
        "charts": true,
        "reportPageTitle": "Cypress Nuxt Front : Report",
        "inlineAssets": true
      },
      "version": "6.2.0"
    }
  }
}