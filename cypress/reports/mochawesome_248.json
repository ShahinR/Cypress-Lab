{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-12T16:21:18.379Z",
    "end": "2025-03-12T16:23:00.071Z",
    "duration": 101692,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "9d2d1930-fa18-48eb-b2b9-4123f91cf252",
      "title": "",
      "fullFile": "cypress/e2e/Classic/userPasswordReset.js",
      "file": "cypress/e2e/Classic/userPasswordReset.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "53494345-d264-4f77-bd64-0165f8643d51",
          "title": "addNewAccount.js: call LBO front-office subscription form, env de test",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Add a new subscription (client) process on macbook-15",
              "fullTitle": "addNewAccount.js: call LBO front-office subscription form, env de test Add a new subscription (client) process on macbook-15",
              "timedOut": null,
              "duration": 52043,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../videos/userPasswordReset.js.mp4\"",
              "code": "cy.fixture('stores').then(stores => {\n  stores.forEach(store => {\n    cy.visit(store);\n    cy.acceptCookies();\n    cy.visit(`${store}/login?mode=connection`, {\n      failOnStatusCode: false\n    });\n    cy.validateElement('[data-cy=customer-registration]').wait(2000);\n    cy.get('[data-cy=customer-registration]').click({\n      force: true\n    });\n    cy.url().should('contain', 'login?mode=connection');\n    // Customer registration\n    cy.acceptCookies();\n    cy.customInfo();\n    // Confirm subscription\n    cy.validateElement('[data-cy=submit] > .c-btn');\n    cy.get('[data-cy=submit] > .c-btn').click({\n      force: true\n    });\n    cy.wait(3000); /* TO KEEP FOR CI TESTS */\n    cy.validateElement('.c-form-message');\n  });\n});",
              "err": {},
              "uuid": "94f6aa1c-6dd4-47db-991a-9c5dfaa3b253",
              "parentUUID": "53494345-d264-4f77-bd64-0165f8643d51",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "94f6aa1c-6dd4-47db-991a-9c5dfaa3b253"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 52043,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3b70993a-1732-4ced-a2d0-de23a518a636",
          "title": "Call the LBO front office and front API to reset the user password",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Reset client password directly from user profile",
              "fullTitle": "Call the LBO front office and front API to reset the user password Reset client password directly from user profile",
              "timedOut": null,
              "duration": 40961,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../videos/userPasswordReset.js.mp4\"",
              "code": "// Get user password reset href attribute and click on it\ncy.validateElement('.c-account-panel__item.c-account-panel__item--mdp');\ncy.get('.c-account-panel__item.c-account-panel__item--mdp').invoke('attr', 'href').then(href => {\n  cy.get('.c-account-panel__item.c-account-panel__item--mdp').click({\n    force: true\n  });\n});\n// Enter the old password and modify it with a new one\nconst oldPassword = customerLoginData.custom_password;\nconst newPassword = oldPassword + '1@Cf';\n// Some assertion validations\ncy.validateElement('.c-account-heading__title').validateElement('#old').validateElement('#new').validateElement('#confirm');\n// Proceed to reset request & update user password fixture entity\ncy.get('#old').clear().type(oldPassword, {\n  delay: 100\n});\ncy.get('#new').clear().type(newPassword, {\n  delay: 100\n});\ncy.get('#confirm').clear().type(newPassword, {\n  delay: 100\n});\ncy.validateElement('.c-account-form__submit > .c-btn').get('.c-account-form__submit > .c-btn').should('be.visible').click({\n  force: true\n}).validateElement('.c-form-message', {\n  timeout: 5000\n});\ncustomerLoginData.custom_password = newPassword;\ncy.writeFile(\"cypress/fixtures/login.json\", customerLoginData);\n// Logout & login again with new password\ncy.validateElement('[data-cy=customer-logout]', {\n  responseTimeout: 5000\n}).get(\"[data-cy=customer-logout] > .c-account-panel__item\").click({\n  force: true\n}).url().should('contain', Cypress.env(\"fo\") + \"/\").customLogin();",
              "err": {},
              "uuid": "2c1b2252-ab43-4fe1-aa02-e7b2dc72b741",
              "parentUUID": "3b70993a-1732-4ced-a2d0-de23a518a636",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Reset user password via front API",
              "fullTitle": "Call the LBO front office and front API to reset the user password Reset user password via front API",
              "timedOut": null,
              "duration": 7841,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../videos/userPasswordReset.js.mp4\"",
              "code": "// Client requests a password reset directly from front API\ncy.validateElement('.c-btn.c-connection__mdp', {\n  timeout: 5000\n});\ncy.get('.c-btn.c-connection__mdp').should('be.visible').click({\n  force: true\n});\ncy.validateElement('.c-modal-pwd').validateElement('.margin-bottom-xl > .c-input > div > #email').validateElement('.c-modal-pwd__form > :nth-child(2) > .c-btn');\ncy.get('.margin-bottom-xl > .c-input > div > #email').click({\n  force: true\n}).clear().type(customerLoginData.custom_email, {\n  force: true,\n  delay: 100\n});\ncy.validateElement('.c-modal-pwd__form > :nth-child(2) > .c-btn');\ncy.get('.c-modal-pwd__form > :nth-child(2) > .c-btn').should('be.visible').click({\n  force: true\n}).get('.c-modal-pwd__title').should('be.visible');",
              "err": {},
              "uuid": "f464ced2-4590-46ab-b90e-f88db9fbd8a0",
              "parentUUID": "3b70993a-1732-4ced-a2d0-de23a518a636",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2c1b2252-ab43-4fe1-aa02-e7b2dc72b741",
            "f464ced2-4590-46ab-b90e-f88db9fbd8a0"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 48802,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true,
        "charts": true,
        "reportPageTitle": "Cypress Nuxt Front : Report",
        "inlineAssets": true
      },
      "version": "6.2.0"
    }
  }
}