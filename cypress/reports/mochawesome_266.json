{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-12T16:57:26.553Z",
    "end": "2025-03-12T17:03:42.076Z",
    "duration": 375523,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "714e78f0-623f-443c-b6b3-9cb3e53961e5",
      "title": "",
      "fullFile": "cypress/e2e/Classic/validateSitemapLinks.js",
      "file": "cypress/e2e/Classic/validateSitemapLinks.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a6cc2334-4152-4840-be87-0ed3dc9a4e72",
          "title": "Validate sitemap URLs dynamically for LBO && Ryses",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should validate URLs in sitemaps for all stores present in fixtures/stores.json",
              "fullTitle": "Validate sitemap URLs dynamically for LBO && Ryses Should validate URLs in sitemaps for all stores present in fixtures/stores.json",
              "timedOut": null,
              "duration": 375130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "\"../videos/validateSitemapLinks.js.mp4\"",
              "code": "const sitemapXmlRefToValidate = [{\n  key: \"lbo\",\n  url: `${expectedDomainByStore.lbo}/flux/sitemap_laboutiqueofficielle.xml`\n}, {\n  key: \"ryses_es\",\n  url: `${expectedDomainByStore.ryses_es}/flux/sitemap_ryses_es.xml`\n}, {\n  key: \"ryses_it\",\n  url: `${expectedDomainByStore.ryses_it}/flux/sitemap_ryses_it.xml`\n}];\nsitemapXmlRefToValidate.forEach(({\n  key,\n  url\n}) => {\n  parseSitemap(url).then(sitemapUrls => {\n    cy.wrap(sitemapUrls).each(sitemapUrl => {\n      if (sitemapUrl.endsWith('.xml')) {\n        parseSitemap(sitemapUrl).then(childUrls => checkUrls(childUrls, key));\n      } else {\n        checkUrls([sitemapUrl], key);\n      }\n    });\n  }).then(() => {\n    if (failedUrls[key].length > 0) {\n      cy.log(`Broken or invalid URLs found for ${key}:`);\n      failedUrls[key].forEach(url => cy.log(url));\n    }\n    expect(failedUrls[key]).to.be.empty;\n  });\n});",
              "err": {},
              "uuid": "e7d0f5dd-b7f0-4409-a23d-8c8a995ac6f4",
              "parentUUID": "a6cc2334-4152-4840-be87-0ed3dc9a4e72",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e7d0f5dd-b7f0-4409-a23d-8c8a995ac6f4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 375130,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": false,
        "json": true,
        "charts": true,
        "reportPageTitle": "Cypress Nuxt Front : Report",
        "inlineAssets": true
      },
      "version": "6.2.0"
    }
  }
}